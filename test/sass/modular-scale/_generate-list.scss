@function ms-generate-list($value: 0, $bases: $ms-base, $ratios: $ms-ratio) {

  // Create blank lists
  $ms-list: ();
  $ms-base-list: ();
  
  // Loop through each ratio AND each base
  // to generate all possibilities.
  @each $ratio in $ratios {
    @each $base in $bases {
      
      // Set base variables
      $ms-base-list: ();
      $base-counter: 0;
      
      // Seed list with an initial value
      @if $base == nth($bases, 1) {
        $ms-base-list: $base;
      }
      
      // Find values on a positive scale
      @if $value > 0 {
        
        // Find lower values on the scale
        $base-counter: -1;
        @while ms-calc($base-counter, $base, $ratio) >= nth($bases, 1) {
          $ms-base-list: join($ms-base-list, ms-calc($base-counter, $base, $ratio));
          $base-counter: $base-counter - 1;
        }
        
        // Find higher possible values on the scale
        $base-counter: 1;
        @while ms-calc($base-counter, $base, $ratio) <= ms-calc($value, nth($bases, 1), $ms-ratio) {
          $ms-base-list: join($ms-base-list, ms-calc($base-counter, $base, $ratio));
          $base-counter: $base-counter + 1;
        }
      }

      // Find values on a negitive scale
      @if $value < 0 {
        
        // Find lower values on the scale
        $base-counter: 1;
        @while ms-calc($base-counter, $base, $ratio) <= nth($bases, 1) {
          $ms-base-list: join($ms-base-list, ms-calc($base-counter, $base, $ratio));
          $base-counter: $base-counter + 1;
        }

        // Find higher possible values on the scale
        $base-counter: -1;
        @while ms-calc($base-counter, $base, $ratio) >= ms-calc($value, nth($bases, 1), $ratio) {
          $ms-base-list: join($ms-base-list, ms-calc($base-counter, $base, $ratio));
          $base-counter: $base-counter - 1;
        }
      }
      
      // reverse list if its largest to smallest
      @if nth($ms-base-list, 1) > nth($ms-base-list, length($ms-base-list)) {
        $ms-reversed-list: ();
        @each $value in $ms-base-list {
          $ms-reversed-list: join($value, $ms-reversed-list);
        }
        $ms-base-list: $ms-reversed-list;
      }

      // Add new possibilities to the master list
      $ms-list: append($ms-list, $ms-base-list, comma);

    }
  }
  
  // After all the possibilities are found, output a master list
  @return $ms-list;
}